#!/usr/bin/env bash

X=$(hostname)
case "$X" in
    S*)
        fab_ints=("br1" "br2" "br3")
        loopback_addr="${X: -1}"
        router_type="s"
        ;;
    A*)
        fab_ints=("br1" "br2" "br3")
        loopback_addr="${X: -1}"
        router_type="a"
        ;;
    C*)
        fab_ints=("br1" "br2" "br3")
        loopback_addr="${X: -1}"
        router_type="c"
        ;;        
    L*)
        fab_ints=("br1" "br2" "br3" "br4" "br5" "br6")
        loopback_addr="$(("${X: -1}"+100))"
        router_type="l"
        ;;
    N*)
        loopback_addr="$(("${X: -1}"+200))"
        router_type="n"
        ;;        
    *)
        echo 'Invalid hostname'
        exit 1
        ;;
esac

if [[ "$router_type" =~ "l" ]]; then
sudo ip addr add 172.16.250."$loopback_addr"/32 dev lo
sudo ip -6 addr add 5000::"$loopback_addr"/128 dev lo
fi
sudo chmod 644 /usr/share/keyrings/*
sudo apt update -y
cat >/etc/hosts <<EOF
127.0.0.1 localhost
172.16.250.1 s1
172.16.250.2 s2
172.18.250.1 a1
172.18.250.2 a2
172.19.250.1 c1
172.19.250.2 c2
172.16.250.101 l1
172.16.250.102 l2
172.16.250.103 l3
172.18.250.101 al1
172.18.250.102 al2
172.18.250.103 al3
172.19.250.101 cl1
172.19.250.102 cl2
172.19.250.103 cl3
EOF
if [[ !("$router_type" =~ "n") ]]; then
    sudo sysctl net.ipv4.ip_forward=1
    sudo sysctl net.ipv4.conf.all.forwarding=1
    sudo sysctl net.ipv6.conf.all.disable_ipv6=0
    sudo sysctl net.ipv6.conf.all.forwarding=1
    if [[ "$router_type" =~ "s" ]]; then
    sudo sysctl net.ipv4.conf.br1.rp_filter=0
    sudo sysctl net.ipv4.conf.br2.rp_filter=0
    sudo sysctl net.ipv4.conf.br3.rp_filter=0
    else
    sudo sysctl net.ipv4.conf.br1.rp_filter=0
    sudo sysctl net.ipv4.conf.br2.rp_filter=0
    sudo sysctl net.ipv4.conf.br3.rp_filter=0
    sudo sysctl net.ipv4.conf.br4.rp_filter=0
    sudo sysctl net.ipv4.conf.br5.rp_filter=0
    sudo sysctl net.ipv4.conf.br6.rp_filter=0    
    fi
    curl -s https://deb.frrouting.org/frr/keys.asc | sudo apt-key add -
    echo deb https://deb.frrouting.org/frr $(lsb_release -s -c) frr-stable | sudo tee -a /etc/apt/sources.list.d/frr.list
    python --version
    python3 --version
    sudo apt update && sudo apt install frr frr-pythontools -y
    #echo -e 'zebra=yes\nbgpd=yes\nbfdd=yes' > frr-daemons
    echo -e 'zebra=yes\nbgpd=yes\nospfd=yes\nbfdd=yes\nstaticd=yes' > frr-daemons
    sudo mv frr-daemons /etc/frr/daemons
    python3 gen_cnet_config.py
    sudo mv frr_generated_config /etc/frr/frr.conf
    sudo chown frr:frr /etc/frr/daemons
    sudo chown frr:frr /etc/frr/frr.conf
    sudo chmod 640 /etc/frr/frr.conf
    sudo usermod -a -G frr vagrant
    sudo usermod -a -G frrvty vagrant
    sudo systemctl start frr.service
    sudo systemctl restart frr.service
else
    n_address=$(ip -br -4 address show eth1)
    IFS=' ' read -ra addr <<< "$n_address"
    IFS='.' read -ra octets <<< "${addr[-1]}"
    subnet=${octets[2]}
    sudo ip route add 172.16.0.0/16 via 172.16."$subnet".100
    sudo apt update -y && sudo apt-get install -y iperf iperf3 mtr traceroute netcat
fi    
if [[ "$router_type" =~ "l" ]]; then
    sudo DEBIAN_FRONTEND=noninteractive apt-get -y install bridge-utils cpu-checker --no-install-recommends
    # Tenant 1
    sudo ip link add vxlan100 type vxlan id 100 local 172.16.250."$loopback_addr" dstport 4789 nolearning
    # Change to MTU=1650 from MTU=1550
    sudo ip link set dev vxlan100 mtu 1650
    sudo ip link set vxlan100 up
    sudo brctl addbr br100
    sudo brctl addif br100 vxlan100
    sudo brctl stp br100 off
    sudo ip link set br100 address 44:39:39:FF:40:94
    sudo ip link set br100 up
    sudo ip link add vxlan4000 type vxlan id 4000 local 172.16.250."$loopback_addr" dstport 4789 nolearning
    sudo brctl addbr br4000
    sudo brctl addif br4000 vxlan4000
    sudo ip link set dev br4000 up
    sudo ip link set dev vxlan4000 mtu 1650
    sudo ip link set vxlan4000 up
    sudo ip link add vrf_cust1 type vrf table 100
    sudo ip link set vrf_cust1 up
    sudo ip link set br100 master vrf_cust1
    sudo ip link set br4000 master vrf_cust1
    # Tenant 2
    sudo ip link add vxlan200 type vxlan id 200 local 172.16.250."$loopback_addr" dstport 4789 nolearning
    sudo ip link set dev vxlan200 mtu 1650
    sudo ip link set vxlan200 up
    sudo brctl addbr br200
    sudo brctl addif br200 vxlan200
    sudo brctl stp br200 off
    sudo ip link set br200 address 44:39:39:FF:40:95
    sudo ip link set br200 up
    sudo ip link add vxlan4001 type vxlan id 4001 local 172.16.250."$loopback_addr" dstport 4789 nolearning
    sudo brctl addbr br4001
    sudo brctl addif br4001 vxlan4001
    sudo ip link set dev br4001 up
    sudo ip link set dev vxlan4001 mtu 1650
    sudo ip link set vxlan4001 up
    sudo ip link add vrf_cust2 type vrf table 200
    sudo ip link set vrf_cust2 up
    sudo ip link set br200 master vrf_cust2
    sudo ip link set br4001 master vrf_cust2
    # Tenant 3
    sudo ip link add vxlan300 type vxlan id 300 local 172.16.250."$loopback_addr" dstport 4789 nolearning
    sudo ip link set dev vxlan300 mtu 1650
    sudo ip link set vxlan300 up
    sudo brctl addbr br300
    sudo brctl addif br300 vxlan300
    sudo brctl stp br300 off
    sudo ip link set br300 address 44:39:39:FF:40:96
    sudo ip link set br300 up
    sudo ip link add vxlan4002 type vxlan id 4002 local 172.16.250."$loopback_addr" dstport 4789 nolearning
    sudo brctl addbr br4002
    sudo brctl addif br4002 vxlan4002
    sudo ip link set dev br4002 up
    sudo ip link set dev vxlan4002 mtu 1650
    sudo ip link set vxlan4002 up
    sudo ip link add vrf_cust3 type vrf table 300
    sudo ip link set vrf_cust3 up
    sudo ip link set br300 master vrf_cust3
    sudo ip link set br4002 master vrf_cust3    
    sudo DEBIAN_FRONTEND=noninteractive apt-get -y install qemu-kvm libvirt-bin virtinst libosinfo-bin libguestfs-tools virt-top genisoimage net-tools bash-completion python-pip libvirt-daemon-system virt-manager libnss-libvirt libvirt-clients osinfo-db-tools intltool sshpass ovmf --no-install-recommends
    sudo sed -i 's/hosts:          files dns/hosts:          files libvirt libvirt_guest dns/' /etc/nsswitch.conf && sudo lsmod | grep kvm && sudo systemctl restart libvirtd
fi
